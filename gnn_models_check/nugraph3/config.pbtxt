# Copyright (c) 2020, NVIDIA CORPORATION. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#  * Neither the name of NVIDIA CORPORATION nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

name: "nugraph3"
backend: "python"
input [
  {
    name: "sp_num_nodes"
    data_type: TYPE_FP32
    dims: [-1]
  },
  {
    name:"evt_y"
    data_type: TYPE_FP32
    dims: [-1]
  },
  {
    name: "u_x_dict"
    data_type: TYPE_FP32
    dims: [-1, 2]
  },
  {
    name: "u_pos"
    data_type: TYPE_FP32
    dims: [-1, 2]
  },
  {
    name: "v_x_dict"
    data_type: TYPE_FP32
    dims: [-1, 2]
  },
  {
    name:"v_pos"
    data_type: TYPE_FP32
    dims: [-1, 2]
  },
  {
    name: "y_x_dict"
    data_type: TYPE_FP32
    dims: [-1, 2]
  },
  {
    name:"y_pos"
    data_type: TYPE_FP32
    dims: [-1, 2]
  },
  {
    name: "u_plane_u"
    data_type: TYPE_INT64
    dims: [2,-1]
  },
  {
    name: "u_nexus_sp"
    data_type: TYPE_INT64
    dims: [2,-1]
  },
  {
    name: "v_plane_v"
    data_type: TYPE_INT64
    dims: [2,-1]
  },
  {
    name: "v_nexus_sp"
    data_type: TYPE_INT64
    dims: [2,-1]
  },
  {
    name: "y_plane_y"
    data_type: TYPE_INT64
    dims: [2,-1]
  },
  {
    name: "y_nexus_sp"
    data_type: TYPE_INT64
    dims: [2,-1]
  },
  {
    name: "examples"
    data_type: TYPE_STRING
    dims: [-1]
  }
]
output [
  {
    name: "e_evt"
    data_type: TYPE_FP32
    dims: [4]
  },
  {
    name:"x_semantic_u"
    data_type: TYPE_FP32
    dims: [-1, 7]

  },
  {
    name:"x_semantic_v"
    data_type: TYPE_FP32
    dims: [-1, 7]

  },
  {
    name:"x_semantic_y"
    data_type: TYPE_FP32
    dims: [-1, 7]

  },
  {
    name:"x_filter_u"
    data_type: TYPE_FP32
    dims: [-1]

  },
  {
    name:"x_filter_v"
    data_type: TYPE_FP32
    dims: [-1]

  },
  {
    name:"x_filter_y"
    data_type: TYPE_FP32
    dims: [-1]

  },
  {
    name:"v_evt"
    data_type: TYPE_FP32
    dims: [1,3]

  }
]
instance_group [{ kind: KIND_CPU }]